{"ast":null,"code":"var DataFile,\n  WordNetFile,\n  fs,\n  util,\n  extend = function (child, parent) {\n    for (var key in parent) {\n      if (hasProp.call(parent, key)) child[key] = parent[key];\n    }\n    function ctor() {\n      this.constructor = child;\n    }\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n    child.__super__ = parent.prototype;\n    return child;\n  },\n  hasProp = {}.hasOwnProperty;\nWordNetFile = require('./wordnet_file');\nfs = require('fs');\nutil = require('util');\nmodule.exports = DataFile = function (superClass) {\n  extend(DataFile, superClass);\n  function DataFile(dataDir, name) {\n    DataFile.__super__.constructor.call(this, dataDir, 'data.' + name);\n  }\n  DataFile.prototype.get = function (location, callback) {\n    var buff, self;\n    self = this;\n    buff = new Buffer(4096);\n    return this.open(function (err, fd) {\n      if (err != null) {\n        return callback.call(self, err, null);\n      }\n      return this.appendLineChar(fd, location, 0, buff, function (err, line) {\n        var base, data, definition, element, examples, glossArray, i, j, k, l, len, m, ptrOffset, ptrs, ref, ref1, synonyms, synsetOffset, tokens, wCnt;\n        if (err != null) {\n          return callback.call(self, err, null);\n        }\n        data = line.split('| ');\n        tokens = data[0].split(/\\s+/);\n        ptrs = [];\n        wCnt = parseInt(tokens[3], 16);\n        synonyms = [];\n        for (i = j = 0, ref = wCnt - 1; j <= ref; i = j += 1) {\n          synonyms.push(tokens[4 + i * 2]);\n        }\n        ptrOffset = (wCnt - 1) * 2 + 6;\n        for (i = l = 0, ref1 = parseInt(tokens[ptrOffset], 10) - 1; l <= ref1; i = l += 1) {\n          base = i * 4 + ptrOffset;\n          ptrs.push({\n            pointerSymbol: tokens[base + 1],\n            synsetOffset: parseInt(tokens[base + 2], 10),\n            pos: tokens[base + 3],\n            sourceTarget: tokens[base + 4]\n          });\n        }\n        glossArray = data[1].split(\"; \");\n        definition = glossArray[0];\n        examples = glossArray.slice(1);\n        for (k = m = 0, len = examples.length; m < len; k = ++m) {\n          element = examples[k];\n          examples[k] = examples[k].replace(/\\\"/g, '').replace(/\\s\\s+/g, '');\n        }\n        synsetOffset = parseInt(tokens[0], 10);\n        if (synsetOffset !== location) {\n          return callback.call(self, \"Invalid synsetOffset: \" + location, null);\n        }\n        return callback.call(self, null, {\n          synsetOffset: parseInt(tokens[0], 10),\n          lexFilenum: parseInt(tokens[1], 10),\n          pos: tokens[2],\n          wCnt: wCnt,\n          lemma: tokens[4],\n          synonyms: synonyms,\n          lexId: tokens[5],\n          ptrs: ptrs,\n          gloss: data[1],\n          def: definition,\n          exp: examples\n        });\n      });\n    });\n  };\n  return DataFile;\n}(WordNetFile);","map":{"version":3,"names":["DataFile","WordNetFile","fs","util","extend","child","parent","key","hasProp","call","ctor","constructor","prototype","__super__","hasOwnProperty","require","module","exports","superClass","dataDir","name","get","location","callback","buff","self","Buffer","open","err","fd","appendLineChar","line","base","data","definition","element","examples","glossArray","i","j","k","l","len","m","ptrOffset","ptrs","ref","ref1","synonyms","synsetOffset","tokens","wCnt","split","parseInt","push","pointerSymbol","pos","sourceTarget","slice","length","replace","lexFilenum","lemma","lexId","gloss","def","exp"],"sources":["/var/home/dadmin/hackapp/node_modules/node-wordnet/lib/data_file.js"],"sourcesContent":["var DataFile, WordNetFile, fs, util,\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nWordNetFile = require('./wordnet_file');\n\nfs = require('fs');\n\nutil = require('util');\n\nmodule.exports = DataFile = (function(superClass) {\n  extend(DataFile, superClass);\n\n  function DataFile(dataDir, name) {\n    DataFile.__super__.constructor.call(this, dataDir, 'data.' + name);\n  }\n\n  DataFile.prototype.get = function(location, callback) {\n    var buff, self;\n    self = this;\n    buff = new Buffer(4096);\n    return this.open(function(err, fd) {\n      if (err != null) {\n        return callback.call(self, err, null);\n      }\n      return this.appendLineChar(fd, location, 0, buff, function(err, line) {\n        var base, data, definition, element, examples, glossArray, i, j, k, l, len, m, ptrOffset, ptrs, ref, ref1, synonyms, synsetOffset, tokens, wCnt;\n        if (err != null) {\n          return callback.call(self, err, null);\n        }\n        data = line.split('| ');\n        tokens = data[0].split(/\\s+/);\n        ptrs = [];\n        wCnt = parseInt(tokens[3], 16);\n        synonyms = [];\n        for (i = j = 0, ref = wCnt - 1; j <= ref; i = j += 1) {\n          synonyms.push(tokens[4 + i * 2]);\n        }\n        ptrOffset = (wCnt - 1) * 2 + 6;\n        for (i = l = 0, ref1 = parseInt(tokens[ptrOffset], 10) - 1; l <= ref1; i = l += 1) {\n          base = i * 4 + ptrOffset;\n          ptrs.push({\n            pointerSymbol: tokens[base + 1],\n            synsetOffset: parseInt(tokens[base + 2], 10),\n            pos: tokens[base + 3],\n            sourceTarget: tokens[base + 4]\n          });\n        }\n        glossArray = data[1].split(\"; \");\n        definition = glossArray[0];\n        examples = glossArray.slice(1);\n        for (k = m = 0, len = examples.length; m < len; k = ++m) {\n          element = examples[k];\n          examples[k] = examples[k].replace(/\\\"/g, '').replace(/\\s\\s+/g, '');\n        }\n        synsetOffset = parseInt(tokens[0], 10);\n        if (synsetOffset !== location) {\n          return callback.call(self, \"Invalid synsetOffset: \" + location, null);\n        }\n        return callback.call(self, null, {\n          synsetOffset: parseInt(tokens[0], 10),\n          lexFilenum: parseInt(tokens[1], 10),\n          pos: tokens[2],\n          wCnt: wCnt,\n          lemma: tokens[4],\n          synonyms: synonyms,\n          lexId: tokens[5],\n          ptrs: ptrs,\n          gloss: data[1],\n          def: definition,\n          exp: examples\n        });\n      });\n    });\n  };\n\n  return DataFile;\n\n})(WordNetFile);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}