{"ast":null,"code":"var DataFile,\n  IndexFile,\n  LRU,\n  Promise,\n  WordNet,\n  async,\n  fs,\n  path,\n  slice = [].slice;\nIndexFile = require('./index_file');\nDataFile = require('./data_file');\nasync = require('async');\nPromise = require('bluebird');\npath = require('path');\nfs = require('fs');\nLRU = require('lru-cache');\nrequire('es6-shim');\nWordNet = function () {\n  var _forms, _loadExceptions, _validForms, _validFormsWithExceptions, exceptions, forms, tokenDetach, unique;\n  function WordNet(options) {\n    var WNdb, e, error;\n    if (typeof options === 'string') {\n      options = {\n        dataDir: options\n      };\n    } else {\n      if (options == null) {\n        options = {};\n      }\n    }\n    if (options.dataDir == null) {\n      try {\n        WNdb = require('wndb-with-exceptions');\n      } catch (error) {\n        e = error;\n        console.error(\"Please 'npm install wndb-with-exceptions' before using WordNet module or specify a dict directory.\");\n        throw e;\n      }\n      options.dataDir = WNdb.path;\n    }\n    if (!options.cache) {\n      this.cache = null;\n    } else {\n      if (options.cache === true) {\n        options.cache = {\n          max: 2000\n        };\n      }\n      if (typeof options.cache === 'object' && typeof options.cache.get === 'function') {\n        this.cache = options.cache;\n      } else {\n        this.cache = LRU(options.cache);\n      }\n    }\n    this.path = options.dataDir;\n    this.nounIndex = new IndexFile(this.path, 'noun');\n    this.verbIndex = new IndexFile(this.path, 'verb');\n    this.adjIndex = new IndexFile(this.path, 'adj');\n    this.advIndex = new IndexFile(this.path, 'adv');\n    this.nounData = new DataFile(this.path, 'noun');\n    this.verbData = new DataFile(this.path, 'verb');\n    this.adjData = new DataFile(this.path, 'adj');\n    this.advData = new DataFile(this.path, 'adv');\n    this.allFiles = [{\n      index: this.nounIndex,\n      data: this.nounData,\n      pos: 'n'\n    }, {\n      index: this.verbIndex,\n      data: this.verbData,\n      pos: 'v'\n    }, {\n      index: this.adjIndex,\n      data: this.adjData,\n      pos: 'a'\n    }, {\n      index: this.advIndex,\n      data: this.advData,\n      pos: 'r'\n    }];\n  }\n  WordNet.prototype.get = function (synsetOffset, pos, callback) {\n    var dataFile, hit, query, wordnet;\n    wordnet = this;\n    if (this.cache) {\n      query = \"get:\" + synsetOffset + \":\" + pos;\n      if (hit = wordnet.cache.get(query)) {\n        if (callback.length === 1) {\n          return callback.call(wordnet, hit);\n        } else {\n          return callback.call(wordnet, null, hit);\n        }\n      }\n    }\n    dataFile = wordnet.getDataFile(pos);\n    return dataFile.get(synsetOffset, function (err, result) {\n      if (query && err == null) {\n        wordnet.cache.set(query, result);\n      }\n      if (callback.length === 1) {\n        return callback.call(wordnet, result);\n      } else {\n        return callback.call(wordnet, err, result);\n      }\n    });\n  };\n  WordNet.prototype.getAsync = function (synsetOffset, pos) {\n    var wordnet;\n    wordnet = this;\n    return new Promise(function (resolve, reject) {\n      return wordnet.get(synsetOffset, pos, function (err, data) {\n        if (err != null) {\n          return reject(err);\n        } else {\n          return resolve(data);\n        }\n      });\n    });\n  };\n  WordNet.prototype.lookup = function (input, callback) {\n    var hit, lword, pos, query, ref, selectedFiles, word, wordnet;\n    wordnet = this;\n    ref = input.split('#'), word = ref[0], pos = ref[1];\n    lword = word.toLowerCase().replace(/\\s+/g, '_');\n    if (this.cache) {\n      query = \"lookup:\" + input;\n      if (hit = wordnet.cache.get(query)) {\n        if (callback.length === 1) {\n          return callback.call(wordnet, hit);\n        } else {\n          return callback.call(wordnet, null, hit);\n        }\n      }\n    }\n    selectedFiles = !pos ? wordnet.allFiles.slice() : wordnet.allFiles.filter(function (file) {\n      return file.pos === pos;\n    });\n    return wordnet.lookupFromFiles(selectedFiles, [], lword, function (err, results) {\n      if (err != null) {\n        return callback.call(wordnet, err);\n      }\n      if (query) {\n        wordnet.cache.set(query, results);\n      }\n      if (callback.length === 1) {\n        return callback.call(wordnet, results);\n      } else {\n        return callback.call(wordnet, null, results);\n      }\n    });\n  };\n  WordNet.prototype.lookupAsync = function (input, callback) {\n    var wordnet;\n    wordnet = this;\n    return new Promise(function (resolve, reject) {\n      return wordnet.lookup(input, function (err, data) {\n        if (err != null) {\n          return reject(err);\n        } else {\n          return resolve(data);\n        }\n      });\n    });\n  };\n  WordNet.prototype.findSense = function (input, callback) {\n    var hit, lword, pos, query, ref, selectedFiles, sense, senseNumber, word, wordnet;\n    wordnet = this;\n    ref = input.split('#'), word = ref[0], pos = ref[1], senseNumber = ref[2];\n    if (this.cache) {\n      query = \"findSense:\" + input;\n      if (hit = wordnet.cache.get(query)) {\n        if (callback.length === 1) {\n          return callback.call(wordnet, hit);\n        } else {\n          return callback.call(wordnet, null, hit);\n        }\n      }\n    }\n    sense = parseInt(senseNumber);\n    if (Number.isNaN(sense)) {\n      throw new Error(\"Sense number should be an integer\");\n    } else if (sense < 1) {\n      throw new Error(\"Sense number should be a positive integer\");\n    }\n    lword = word.toLowerCase().replace(/\\s+/g, '_');\n    selectedFiles = wordnet.allFiles.filter(function (file) {\n      return file.pos === pos;\n    });\n    return wordnet.lookupFromFiles(selectedFiles, [], lword, function (err, response) {\n      var result;\n      if (err != null) {\n        return callback.call(wordnet, err);\n      }\n      result = response[sense - 1];\n      if (query) {\n        wordnet.cache.set(query, result);\n      }\n      if (callback.length === 1) {\n        return callback.call(wordnet, result);\n      } else {\n        return callback.call(wordnet, null, result);\n      }\n    });\n  };\n  WordNet.prototype.findSenseAsync = function (input) {\n    var wordnet;\n    wordnet = this;\n    return new Promise(function (resolve, reject) {\n      return wordnet.findSense(input, function (err, data) {\n        if (err != null) {\n          return reject(err);\n        } else {\n          return resolve(data);\n        }\n      });\n    });\n  };\n  WordNet.prototype.querySense = function (input, callback) {\n    var hit, pos, query, ref, word, wordnet;\n    wordnet = this;\n    ref = input.split('#'), word = ref[0], pos = ref[1];\n    if (this.cache) {\n      query = \"querySense:\" + input;\n      if (hit = wordnet.cache.get(query)) {\n        if (callback.length === 1) {\n          return callback.call(wordnet, hit);\n        } else {\n          return callback.call(wordnet, null, hit);\n        }\n      }\n    }\n    return wordnet.lookup(input, function (err, results) {\n      var i, sense, senseCounts, senses;\n      if (err != null) {\n        return callback.call(wordnet, err);\n      }\n      senseCounts = {};\n      senses = function () {\n        var j, len, results1;\n        results1 = [];\n        for (i = j = 0, len = results.length; j < len; i = ++j) {\n          sense = results[i];\n          pos = sense.pos;\n          if (pos === 's') {\n            pos = 'a';\n          }\n          if (senseCounts[pos] == null) {\n            senseCounts[pos] = 1;\n          }\n          results1.push(word + \"#\" + pos + \"#\" + senseCounts[pos]++);\n        }\n        return results1;\n      }();\n      if (query) {\n        wordnet.cache.set(query, senses);\n      }\n      if (callback.length === 1) {\n        return callback.call(wordnet, senses);\n      } else {\n        return callback.call(wordnet, null, senses);\n      }\n    });\n  };\n  WordNet.prototype.querySenseAsync = function (input) {\n    var wordnet;\n    wordnet = this;\n    return new Promise(function (resolve, reject) {\n      return wordnet.querySense(input, function (err, data) {\n        if (err != null) {\n          return reject(err);\n        } else {\n          return resolve(data);\n        }\n      });\n    });\n  };\n  WordNet.prototype.lookupFromFiles = function (files, results, word, callback) {\n    var file, wordnet;\n    wordnet = this;\n    if (files.length === 0) {\n      return callback.call(wordnet, null, results);\n    } else {\n      file = files.pop();\n      return file.index.lookup(word, function (err, record) {\n        if (record) {\n          return wordnet.pushResults(file.data, results, record.synsetOffset, function () {\n            return wordnet.lookupFromFiles(files, results, word, callback);\n          });\n        } else {\n          return wordnet.lookupFromFiles(files, results, word, callback);\n        }\n      });\n    }\n  };\n  WordNet.prototype.pushResults = function (data, results, offsets, callback) {\n    var wordnet;\n    wordnet = this;\n    if (offsets.length === 0) {\n      return callback(results);\n    } else {\n      return data.get(offsets.pop(), function (err, record) {\n        results.push(record);\n        return wordnet.pushResults(data, results, offsets, callback);\n      });\n    }\n  };\n  WordNet.prototype.loadResultSynonyms = function (synonyms, results, callback) {\n    var result, wordnet;\n    wordnet = this;\n    if (results.length > 0) {\n      result = results.pop();\n      return wordnet.loadSynonyms(synonyms, results, result.ptrs, callback);\n    } else {\n      return callback(synonyms);\n    }\n  };\n  WordNet.prototype.loadSynonyms = function (synonyms, results, ptrs, callback) {\n    var ptr, wordnet;\n    wordnet = this;\n    if (ptrs.length > 0) {\n      ptr = ptrs.pop();\n      return this.get(ptr.synsetOffset, ptr.pos, function (result) {\n        synonyms.push(result);\n        return wordnet.loadSynonyms(synonyms, results, ptrs, callback);\n      });\n    } else {\n      return wordnet.loadResultSynonyms(synonyms, results, callback);\n    }\n  };\n  WordNet.prototype.lookupSynonyms = function (word, callback) {\n    var wordnet;\n    wordnet = this;\n    return wordnet.lookup(word, function (results) {\n      return wordnet.loadResultSynonyms([], results, callback);\n    });\n  };\n  WordNet.prototype.getSynonyms = function () {\n    var callback, pos, synsetOffset, wordnet;\n    wordnet = this;\n    callback = arguments[2] ? arguments[2] : arguments[1];\n    pos = arguments[0].pos ? arguments[0].pos : arguments[1];\n    synsetOffset = arguments[0].synsetOffset ? arguments[0].synsetOffset : arguments[0];\n    return this.get(synsetOffset, pos, function (result) {\n      return wordnet.loadSynonyms([], [], result.ptrs, callback);\n    });\n  };\n  WordNet.prototype.getDataFile = function (pos) {\n    switch (pos) {\n      case 'n':\n        return this.nounData;\n      case 'v':\n        return this.verbData;\n      case 'a':\n      case 's':\n        return this.adjData;\n      case 'r':\n        return this.advData;\n    }\n  };\n  exceptions = [{\n    name: \"noun.exc\",\n    pos: 'n'\n  }, {\n    name: \"verb.exc\",\n    pos: 'v'\n  }, {\n    name: \"adj.exc\",\n    pos: 'a'\n  }, {\n    name: \"adv.exc\",\n    pos: 'r'\n  }];\n  _loadExceptions = function (wordnet, callback) {\n    var loadFile;\n    WordNet.prototype.exceptions = 'pending';\n    loadFile = function (exception, callback) {\n      var fullPath;\n      fullPath = path.join(wordnet.path, exception.name);\n      return fs.readFile(fullPath, function (err, data) {\n        var j, len, line, lines, ref, temp, term1, term2;\n        if (err) {\n          return callback(err);\n        }\n        temp = {};\n        lines = data.toString().split(\"\\n\");\n        for (j = 0, len = lines.length; j < len; j++) {\n          line = lines[j];\n          if (line.length > 0) {\n            ref = line.split(' '), term1 = ref[0], term2 = 2 <= ref.length ? slice.call(ref, 1) : [];\n            if (temp[term1] == null) {\n              temp[term1] = [];\n            }\n            Array.prototype.push.apply(temp[term1], term2);\n          }\n        }\n        return callback(null, {\n          pos: exception.pos,\n          data: temp\n        });\n      });\n    };\n    return async.map(exceptions, loadFile, function (err, results) {\n      var j, len, result;\n      exceptions = {};\n      for (j = 0, len = results.length; j < len; j++) {\n        result = results[j];\n        exceptions[result.pos] = result.data;\n      }\n      WordNet.prototype.exceptions = exceptions;\n      return callback();\n    });\n  };\n  WordNet.prototype.close = function () {\n    this.nounIndex.close();\n    this.verbIndex.close();\n    this.adjIndex.close();\n    this.advIndex.close();\n    this.nounData.close();\n    this.verbData.close();\n    this.adjData.close();\n    return this.advData.close();\n  };\n  unique = function (a) {\n    var found;\n    found = {};\n    return a.filter(function (item) {\n      if (found[item]) {\n        return false;\n      } else {\n        return found[item] = true;\n      }\n    });\n  };\n  tokenDetach = function (string) {\n    var detach, length, pos, ref, sense, word;\n    ref = string.split('#'), word = ref[0], pos = ref[1], sense = ref[2];\n    detach = [word];\n    length = word.length;\n    switch (pos) {\n      case 'n':\n        if (word.endsWith(\"s\")) {\n          detach.push(word.substring(0, length - 1));\n        }\n        if (word.endsWith(\"ses\")) {\n          detach.push(word.substring(0, length - 2));\n        }\n        if (word.endsWith(\"xes\")) {\n          detach.push(word.substring(0, length - 2));\n        }\n        if (word.endsWith(\"zes\")) {\n          detach.push(word.substring(0, length - 2));\n        }\n        if (word.endsWith(\"ches\")) {\n          detach.push(word.substring(0, length - 2));\n        }\n        if (word.endsWith(\"shes\")) {\n          detach.push(word.substring(0, length - 2));\n        }\n        if (word.endsWith(\"men\")) {\n          detach.push(word.substring(0, length - 3) + \"man\");\n        }\n        if (word.endsWith(\"ies\")) {\n          detach.push(word.substring(0, length - 3) + \"y\");\n        }\n        break;\n      case 'v':\n        if (word.endsWith(\"s\")) {\n          detach.push(word.substring(0, length - 1));\n        }\n        if (word.endsWith(\"ies\")) {\n          detach.push(word.substring(0, length - 3) + \"y\");\n        }\n        if (word.endsWith(\"es\")) {\n          detach.push(word.substring(0, length - 2));\n        }\n        if (word.endsWith(\"ed\")) {\n          detach.push(word.substring(0, length - 1));\n        }\n        if (word.endsWith(\"ed\")) {\n          detach.push(word.substring(0, length - 2));\n        }\n        if (word.endsWith(\"ing\")) {\n          detach.push(word.substring(0, length - 3) + \"e\");\n        }\n        if (word.endsWith(\"ing\")) {\n          detach.push(word.substring(0, length - 3));\n        }\n        break;\n      case 'r':\n        if (word.endsWith(\"er\")) {\n          detach.push(word.substring(0, length - 2));\n        }\n        if (word.endsWith(\"er\")) {\n          detach.push(word.substring(0, length - 1));\n        }\n        if (word.endsWith(\"est\")) {\n          detach.push(word.substring(0, length - 3));\n        }\n        if (word.endsWith(\"est\")) {\n          detach.push(word.substring(0, length - 2));\n        }\n    }\n    return unique(detach);\n  };\n  _forms = function (wordnet, word, pos) {\n    var colloc, exception, forms, i, index, j, lword, ref, ref1, rtn, token, tokens;\n    lword = word.toLowerCase();\n    exception = (ref = wordnet.exceptions[pos]) != null ? ref[lword] : void 0;\n    if (exception) {\n      return [word].concat(exception);\n    }\n    tokens = word.split(/[ _]/g);\n    if (tokens.length === 1) {\n      return tokenDetach(tokens[0] + \"#\" + pos);\n    }\n    forms = tokens.map(function (token) {\n      return _forms(wordnet, token, pos);\n    });\n    rtn = [];\n    index = function () {\n      var j, len, results1;\n      results1 = [];\n      for (j = 0, len = tokens.length; j < len; j++) {\n        token = tokens[j];\n        results1.push(0);\n      }\n      return results1;\n    }();\n    while (true) {\n      colloc = forms[0][index[0]];\n      for (i = j = 1, ref1 = tokens.length - 1; 1 <= ref1 ? j <= ref1 : j >= ref1; i = 1 <= ref1 ? ++j : --j) {\n        colloc = colloc + '_' + forms[i][index[i]];\n      }\n      rtn.push(colloc);\n      i = 0;\n      while (i < tokens.length) {\n        index[i] = index[i] + 1;\n        if (index[i] < forms[i].length) {\n          break;\n        } else {\n          index[i] = 0;\n        }\n        i = i + 1;\n      }\n      if (i >= tokens.length) {\n        break;\n      }\n    }\n    return rtn;\n  };\n  forms = function (wordnet, string) {\n    var element, j, len, pos, ref, results1, rtn, sense, word;\n    ref = string.split('#'), word = ref[0], pos = ref[1], sense = ref[2];\n    rtn = _forms(wordnet, word, pos);\n    results1 = [];\n    for (j = 0, len = rtn.length; j < len; j++) {\n      element = rtn[j];\n      results1.push(element + \"#\" + pos);\n    }\n    return results1;\n  };\n  _validForms = function (wordnet, string, callback) {\n    var eachFn, filteredResults, pos, possibleForms, reducer, ref, sense, word;\n    ref = string.split('#'), word = ref[0], pos = ref[1], sense = ref[2];\n    if (!pos) {\n      reducer = function (previous, current, next) {\n        return _validForms(wordnet, string + \"#\" + current, function (err, value) {\n          if (value === void 0) {\n            return next(null, previous);\n          } else {\n            return next(null, previous.concat(value));\n          }\n        });\n      };\n      return async.reduce(['n', 'v', 'a', 'r'], [], reducer, function (err, result) {\n        return callback(null, result);\n      });\n    } else {\n      possibleForms = forms(wordnet, word + \"#\" + pos);\n      filteredResults = [];\n      eachFn = function (term, done) {\n        return wordnet.lookup(term, function (err, data) {\n          if (err != null) {\n            return done(err);\n          }\n          if (data.length > 0) {\n            filteredResults.push(term);\n          }\n          return done();\n        });\n      };\n      return async.each(possibleForms, eachFn, function (err) {\n        return callback(err, filteredResults);\n      });\n    }\n  };\n  _validFormsWithExceptions = function (wordnet, string, callback) {\n    if (wordnet.exceptions === void 0) {\n      return _loadExceptions(wordnet, function () {\n        return _validFormsWithExceptions(wordnet, string, callback);\n      });\n    } else if (wordnet.exceptions === 'pending') {\n      return setImmediate(_validFormsWithExceptions, wordnet, string, callback);\n    } else {\n      return _validForms(wordnet, string, callback);\n    }\n  };\n  WordNet.prototype.validForms = function (string, callback) {\n    var hit, query, wordnet;\n    wordnet = this;\n    if (this.cache) {\n      query = \"validForms:\" + string;\n      if (hit = wordnet.cache.get(query)) {\n        if (callback.length === 1) {\n          return callback.call(wordnet, hit);\n        } else {\n          return callback.call(wordnet, null, hit);\n        }\n      }\n    }\n    return _validFormsWithExceptions(this, string, function (err, result) {\n      if (query) {\n        wordnet.cache.set(query, result);\n      }\n      if (callback.length === 1) {\n        return callback.call(wordnet, result);\n      } else {\n        return callback.call(wordnet, null, result);\n      }\n    });\n  };\n  WordNet.prototype.validFormsAsync = function (string) {\n    return new Promise(function (_this) {\n      return function (resolve, reject) {\n        return _this.validForms(string, function (err, data) {\n          if (err != null) {\n            return reject(err);\n          } else {\n            return resolve(data);\n          }\n        });\n      };\n    }(this));\n  };\n  return WordNet;\n}();\nmodule.exports = WordNet;","map":{"version":3,"names":["DataFile","IndexFile","LRU","Promise","WordNet","async","fs","path","slice","require","_forms","_loadExceptions","_validForms","_validFormsWithExceptions","exceptions","forms","tokenDetach","unique","options","WNdb","e","error","dataDir","console","cache","max","get","nounIndex","verbIndex","adjIndex","advIndex","nounData","verbData","adjData","advData","allFiles","index","data","pos","prototype","synsetOffset","callback","dataFile","hit","query","wordnet","length","call","getDataFile","err","result","set","getAsync","resolve","reject","lookup","input","lword","ref","selectedFiles","word","split","toLowerCase","replace","filter","file","lookupFromFiles","results","lookupAsync","findSense","sense","senseNumber","parseInt","Number","isNaN","Error","response","findSenseAsync","querySense","i","senseCounts","senses","j","len","results1","push","querySenseAsync","files","pop","record","pushResults","offsets","loadResultSynonyms","synonyms","loadSynonyms","ptrs","ptr","lookupSynonyms","getSynonyms","arguments","name","loadFile","exception","fullPath","join","readFile","line","lines","temp","term1","term2","toString","Array","apply","map","close","a","found","item","string","detach","endsWith","substring","colloc","ref1","rtn","token","tokens","concat","element","eachFn","filteredResults","possibleForms","reducer","previous","current","next","value","reduce","term","done","each","setImmediate","validForms","validFormsAsync","_this","module","exports"],"sources":["/var/home/dadmin/hackapp/node_modules/node-wordnet/lib/wordnet.js"],"sourcesContent":["var DataFile, IndexFile, LRU, Promise, WordNet, async, fs, path,\n  slice = [].slice;\n\nIndexFile = require('./index_file');\n\nDataFile = require('./data_file');\n\nasync = require('async');\n\nPromise = require('bluebird');\n\npath = require('path');\n\nfs = require('fs');\n\nLRU = require('lru-cache');\n\nrequire('es6-shim');\n\nWordNet = (function() {\n  var _forms, _loadExceptions, _validForms, _validFormsWithExceptions, exceptions, forms, tokenDetach, unique;\n\n  function WordNet(options) {\n    var WNdb, e, error;\n    if (typeof options === 'string') {\n      options = {\n        dataDir: options\n      };\n    } else {\n      if (options == null) {\n        options = {};\n      }\n    }\n    if (options.dataDir == null) {\n      try {\n        WNdb = require('wndb-with-exceptions');\n      } catch (error) {\n        e = error;\n        console.error(\"Please 'npm install wndb-with-exceptions' before using WordNet module or specify a dict directory.\");\n        throw e;\n      }\n      options.dataDir = WNdb.path;\n    }\n    if (!options.cache) {\n      this.cache = null;\n    } else {\n      if (options.cache === true) {\n        options.cache = {\n          max: 2000\n        };\n      }\n      if (typeof options.cache === 'object' && typeof options.cache.get === 'function') {\n        this.cache = options.cache;\n      } else {\n        this.cache = LRU(options.cache);\n      }\n    }\n    this.path = options.dataDir;\n    this.nounIndex = new IndexFile(this.path, 'noun');\n    this.verbIndex = new IndexFile(this.path, 'verb');\n    this.adjIndex = new IndexFile(this.path, 'adj');\n    this.advIndex = new IndexFile(this.path, 'adv');\n    this.nounData = new DataFile(this.path, 'noun');\n    this.verbData = new DataFile(this.path, 'verb');\n    this.adjData = new DataFile(this.path, 'adj');\n    this.advData = new DataFile(this.path, 'adv');\n    this.allFiles = [\n      {\n        index: this.nounIndex,\n        data: this.nounData,\n        pos: 'n'\n      }, {\n        index: this.verbIndex,\n        data: this.verbData,\n        pos: 'v'\n      }, {\n        index: this.adjIndex,\n        data: this.adjData,\n        pos: 'a'\n      }, {\n        index: this.advIndex,\n        data: this.advData,\n        pos: 'r'\n      }\n    ];\n  }\n\n  WordNet.prototype.get = function(synsetOffset, pos, callback) {\n    var dataFile, hit, query, wordnet;\n    wordnet = this;\n    if (this.cache) {\n      query = \"get:\" + synsetOffset + \":\" + pos;\n      if (hit = wordnet.cache.get(query)) {\n        if (callback.length === 1) {\n          return callback.call(wordnet, hit);\n        } else {\n          return callback.call(wordnet, null, hit);\n        }\n      }\n    }\n    dataFile = wordnet.getDataFile(pos);\n    return dataFile.get(synsetOffset, function(err, result) {\n      if (query && (err == null)) {\n        wordnet.cache.set(query, result);\n      }\n      if (callback.length === 1) {\n        return callback.call(wordnet, result);\n      } else {\n        return callback.call(wordnet, err, result);\n      }\n    });\n  };\n\n  WordNet.prototype.getAsync = function(synsetOffset, pos) {\n    var wordnet;\n    wordnet = this;\n    return new Promise(function(resolve, reject) {\n      return wordnet.get(synsetOffset, pos, function(err, data) {\n        if (err != null) {\n          return reject(err);\n        } else {\n          return resolve(data);\n        }\n      });\n    });\n  };\n\n  WordNet.prototype.lookup = function(input, callback) {\n    var hit, lword, pos, query, ref, selectedFiles, word, wordnet;\n    wordnet = this;\n    ref = input.split('#'), word = ref[0], pos = ref[1];\n    lword = word.toLowerCase().replace(/\\s+/g, '_');\n    if (this.cache) {\n      query = \"lookup:\" + input;\n      if (hit = wordnet.cache.get(query)) {\n        if (callback.length === 1) {\n          return callback.call(wordnet, hit);\n        } else {\n          return callback.call(wordnet, null, hit);\n        }\n      }\n    }\n    selectedFiles = !pos ? wordnet.allFiles.slice() : wordnet.allFiles.filter(function(file) {\n      return file.pos === pos;\n    });\n    return wordnet.lookupFromFiles(selectedFiles, [], lword, function(err, results) {\n      if (err != null) {\n        return callback.call(wordnet, err);\n      }\n      if (query) {\n        wordnet.cache.set(query, results);\n      }\n      if (callback.length === 1) {\n        return callback.call(wordnet, results);\n      } else {\n        return callback.call(wordnet, null, results);\n      }\n    });\n  };\n\n  WordNet.prototype.lookupAsync = function(input, callback) {\n    var wordnet;\n    wordnet = this;\n    return new Promise(function(resolve, reject) {\n      return wordnet.lookup(input, function(err, data) {\n        if (err != null) {\n          return reject(err);\n        } else {\n          return resolve(data);\n        }\n      });\n    });\n  };\n\n  WordNet.prototype.findSense = function(input, callback) {\n    var hit, lword, pos, query, ref, selectedFiles, sense, senseNumber, word, wordnet;\n    wordnet = this;\n    ref = input.split('#'), word = ref[0], pos = ref[1], senseNumber = ref[2];\n    if (this.cache) {\n      query = \"findSense:\" + input;\n      if (hit = wordnet.cache.get(query)) {\n        if (callback.length === 1) {\n          return callback.call(wordnet, hit);\n        } else {\n          return callback.call(wordnet, null, hit);\n        }\n      }\n    }\n    sense = parseInt(senseNumber);\n    if (Number.isNaN(sense)) {\n      throw new Error(\"Sense number should be an integer\");\n    } else if (sense < 1) {\n      throw new Error(\"Sense number should be a positive integer\");\n    }\n    lword = word.toLowerCase().replace(/\\s+/g, '_');\n    selectedFiles = wordnet.allFiles.filter(function(file) {\n      return file.pos === pos;\n    });\n    return wordnet.lookupFromFiles(selectedFiles, [], lword, function(err, response) {\n      var result;\n      if (err != null) {\n        return callback.call(wordnet, err);\n      }\n      result = response[sense - 1];\n      if (query) {\n        wordnet.cache.set(query, result);\n      }\n      if (callback.length === 1) {\n        return callback.call(wordnet, result);\n      } else {\n        return callback.call(wordnet, null, result);\n      }\n    });\n  };\n\n  WordNet.prototype.findSenseAsync = function(input) {\n    var wordnet;\n    wordnet = this;\n    return new Promise(function(resolve, reject) {\n      return wordnet.findSense(input, function(err, data) {\n        if (err != null) {\n          return reject(err);\n        } else {\n          return resolve(data);\n        }\n      });\n    });\n  };\n\n  WordNet.prototype.querySense = function(input, callback) {\n    var hit, pos, query, ref, word, wordnet;\n    wordnet = this;\n    ref = input.split('#'), word = ref[0], pos = ref[1];\n    if (this.cache) {\n      query = \"querySense:\" + input;\n      if (hit = wordnet.cache.get(query)) {\n        if (callback.length === 1) {\n          return callback.call(wordnet, hit);\n        } else {\n          return callback.call(wordnet, null, hit);\n        }\n      }\n    }\n    return wordnet.lookup(input, function(err, results) {\n      var i, sense, senseCounts, senses;\n      if (err != null) {\n        return callback.call(wordnet, err);\n      }\n      senseCounts = {};\n      senses = (function() {\n        var j, len, results1;\n        results1 = [];\n        for (i = j = 0, len = results.length; j < len; i = ++j) {\n          sense = results[i];\n          pos = sense.pos;\n          if (pos === 's') {\n            pos = 'a';\n          }\n          if (senseCounts[pos] == null) {\n            senseCounts[pos] = 1;\n          }\n          results1.push(word + \"#\" + pos + \"#\" + senseCounts[pos]++);\n        }\n        return results1;\n      })();\n      if (query) {\n        wordnet.cache.set(query, senses);\n      }\n      if (callback.length === 1) {\n        return callback.call(wordnet, senses);\n      } else {\n        return callback.call(wordnet, null, senses);\n      }\n    });\n  };\n\n  WordNet.prototype.querySenseAsync = function(input) {\n    var wordnet;\n    wordnet = this;\n    return new Promise(function(resolve, reject) {\n      return wordnet.querySense(input, function(err, data) {\n        if (err != null) {\n          return reject(err);\n        } else {\n          return resolve(data);\n        }\n      });\n    });\n  };\n\n  WordNet.prototype.lookupFromFiles = function(files, results, word, callback) {\n    var file, wordnet;\n    wordnet = this;\n    if (files.length === 0) {\n      return callback.call(wordnet, null, results);\n    } else {\n      file = files.pop();\n      return file.index.lookup(word, function(err, record) {\n        if (record) {\n          return wordnet.pushResults(file.data, results, record.synsetOffset, function() {\n            return wordnet.lookupFromFiles(files, results, word, callback);\n          });\n        } else {\n          return wordnet.lookupFromFiles(files, results, word, callback);\n        }\n      });\n    }\n  };\n\n  WordNet.prototype.pushResults = function(data, results, offsets, callback) {\n    var wordnet;\n    wordnet = this;\n    if (offsets.length === 0) {\n      return callback(results);\n    } else {\n      return data.get(offsets.pop(), function(err, record) {\n        results.push(record);\n        return wordnet.pushResults(data, results, offsets, callback);\n      });\n    }\n  };\n\n  WordNet.prototype.loadResultSynonyms = function(synonyms, results, callback) {\n    var result, wordnet;\n    wordnet = this;\n    if (results.length > 0) {\n      result = results.pop();\n      return wordnet.loadSynonyms(synonyms, results, result.ptrs, callback);\n    } else {\n      return callback(synonyms);\n    }\n  };\n\n  WordNet.prototype.loadSynonyms = function(synonyms, results, ptrs, callback) {\n    var ptr, wordnet;\n    wordnet = this;\n    if (ptrs.length > 0) {\n      ptr = ptrs.pop();\n      return this.get(ptr.synsetOffset, ptr.pos, function(result) {\n        synonyms.push(result);\n        return wordnet.loadSynonyms(synonyms, results, ptrs, callback);\n      });\n    } else {\n      return wordnet.loadResultSynonyms(synonyms, results, callback);\n    }\n  };\n\n  WordNet.prototype.lookupSynonyms = function(word, callback) {\n    var wordnet;\n    wordnet = this;\n    return wordnet.lookup(word, function(results) {\n      return wordnet.loadResultSynonyms([], results, callback);\n    });\n  };\n\n  WordNet.prototype.getSynonyms = function() {\n    var callback, pos, synsetOffset, wordnet;\n    wordnet = this;\n    callback = arguments[2] ? arguments[2] : arguments[1];\n    pos = arguments[0].pos ? arguments[0].pos : arguments[1];\n    synsetOffset = arguments[0].synsetOffset ? arguments[0].synsetOffset : arguments[0];\n    return this.get(synsetOffset, pos, function(result) {\n      return wordnet.loadSynonyms([], [], result.ptrs, callback);\n    });\n  };\n\n  WordNet.prototype.getDataFile = function(pos) {\n    switch (pos) {\n      case 'n':\n        return this.nounData;\n      case 'v':\n        return this.verbData;\n      case 'a':\n      case 's':\n        return this.adjData;\n      case 'r':\n        return this.advData;\n    }\n  };\n\n  exceptions = [\n    {\n      name: \"noun.exc\",\n      pos: 'n'\n    }, {\n      name: \"verb.exc\",\n      pos: 'v'\n    }, {\n      name: \"adj.exc\",\n      pos: 'a'\n    }, {\n      name: \"adv.exc\",\n      pos: 'r'\n    }\n  ];\n\n  _loadExceptions = function(wordnet, callback) {\n    var loadFile;\n    WordNet.prototype.exceptions = 'pending';\n    loadFile = function(exception, callback) {\n      var fullPath;\n      fullPath = path.join(wordnet.path, exception.name);\n      return fs.readFile(fullPath, function(err, data) {\n        var j, len, line, lines, ref, temp, term1, term2;\n        if (err) {\n          return callback(err);\n        }\n        temp = {};\n        lines = data.toString().split(\"\\n\");\n        for (j = 0, len = lines.length; j < len; j++) {\n          line = lines[j];\n          if (line.length > 0) {\n            ref = line.split(' '), term1 = ref[0], term2 = 2 <= ref.length ? slice.call(ref, 1) : [];\n            if (temp[term1] == null) {\n              temp[term1] = [];\n            }\n            Array.prototype.push.apply(temp[term1], term2);\n          }\n        }\n        return callback(null, {\n          pos: exception.pos,\n          data: temp\n        });\n      });\n    };\n    return async.map(exceptions, loadFile, function(err, results) {\n      var j, len, result;\n      exceptions = {};\n      for (j = 0, len = results.length; j < len; j++) {\n        result = results[j];\n        exceptions[result.pos] = result.data;\n      }\n      WordNet.prototype.exceptions = exceptions;\n      return callback();\n    });\n  };\n\n  WordNet.prototype.close = function() {\n    this.nounIndex.close();\n    this.verbIndex.close();\n    this.adjIndex.close();\n    this.advIndex.close();\n    this.nounData.close();\n    this.verbData.close();\n    this.adjData.close();\n    return this.advData.close();\n  };\n\n  unique = function(a) {\n    var found;\n    found = {};\n    return a.filter(function(item) {\n      if (found[item]) {\n        return false;\n      } else {\n        return found[item] = true;\n      }\n    });\n  };\n\n  tokenDetach = function(string) {\n    var detach, length, pos, ref, sense, word;\n    ref = string.split('#'), word = ref[0], pos = ref[1], sense = ref[2];\n    detach = [word];\n    length = word.length;\n    switch (pos) {\n      case 'n':\n        if (word.endsWith(\"s\")) {\n          detach.push(word.substring(0, length - 1));\n        }\n        if (word.endsWith(\"ses\")) {\n          detach.push(word.substring(0, length - 2));\n        }\n        if (word.endsWith(\"xes\")) {\n          detach.push(word.substring(0, length - 2));\n        }\n        if (word.endsWith(\"zes\")) {\n          detach.push(word.substring(0, length - 2));\n        }\n        if (word.endsWith(\"ches\")) {\n          detach.push(word.substring(0, length - 2));\n        }\n        if (word.endsWith(\"shes\")) {\n          detach.push(word.substring(0, length - 2));\n        }\n        if (word.endsWith(\"men\")) {\n          detach.push(word.substring(0, length - 3) + \"man\");\n        }\n        if (word.endsWith(\"ies\")) {\n          detach.push(word.substring(0, length - 3) + \"y\");\n        }\n        break;\n      case 'v':\n        if (word.endsWith(\"s\")) {\n          detach.push(word.substring(0, length - 1));\n        }\n        if (word.endsWith(\"ies\")) {\n          detach.push(word.substring(0, length - 3) + \"y\");\n        }\n        if (word.endsWith(\"es\")) {\n          detach.push(word.substring(0, length - 2));\n        }\n        if (word.endsWith(\"ed\")) {\n          detach.push(word.substring(0, length - 1));\n        }\n        if (word.endsWith(\"ed\")) {\n          detach.push(word.substring(0, length - 2));\n        }\n        if (word.endsWith(\"ing\")) {\n          detach.push(word.substring(0, length - 3) + \"e\");\n        }\n        if (word.endsWith(\"ing\")) {\n          detach.push(word.substring(0, length - 3));\n        }\n        break;\n      case 'r':\n        if (word.endsWith(\"er\")) {\n          detach.push(word.substring(0, length - 2));\n        }\n        if (word.endsWith(\"er\")) {\n          detach.push(word.substring(0, length - 1));\n        }\n        if (word.endsWith(\"est\")) {\n          detach.push(word.substring(0, length - 3));\n        }\n        if (word.endsWith(\"est\")) {\n          detach.push(word.substring(0, length - 2));\n        }\n    }\n    return unique(detach);\n  };\n\n  _forms = function(wordnet, word, pos) {\n    var colloc, exception, forms, i, index, j, lword, ref, ref1, rtn, token, tokens;\n    lword = word.toLowerCase();\n    exception = (ref = wordnet.exceptions[pos]) != null ? ref[lword] : void 0;\n    if (exception) {\n      return [word].concat(exception);\n    }\n    tokens = word.split(/[ _]/g);\n    if (tokens.length === 1) {\n      return tokenDetach(tokens[0] + \"#\" + pos);\n    }\n    forms = tokens.map(function(token) {\n      return _forms(wordnet, token, pos);\n    });\n    rtn = [];\n    index = (function() {\n      var j, len, results1;\n      results1 = [];\n      for (j = 0, len = tokens.length; j < len; j++) {\n        token = tokens[j];\n        results1.push(0);\n      }\n      return results1;\n    })();\n    while (true) {\n      colloc = forms[0][index[0]];\n      for (i = j = 1, ref1 = tokens.length - 1; 1 <= ref1 ? j <= ref1 : j >= ref1; i = 1 <= ref1 ? ++j : --j) {\n        colloc = colloc + '_' + forms[i][index[i]];\n      }\n      rtn.push(colloc);\n      i = 0;\n      while (i < tokens.length) {\n        index[i] = index[i] + 1;\n        if (index[i] < forms[i].length) {\n          break;\n        } else {\n          index[i] = 0;\n        }\n        i = i + 1;\n      }\n      if (i >= tokens.length) {\n        break;\n      }\n    }\n    return rtn;\n  };\n\n  forms = function(wordnet, string) {\n    var element, j, len, pos, ref, results1, rtn, sense, word;\n    ref = string.split('#'), word = ref[0], pos = ref[1], sense = ref[2];\n    rtn = _forms(wordnet, word, pos);\n    results1 = [];\n    for (j = 0, len = rtn.length; j < len; j++) {\n      element = rtn[j];\n      results1.push(element + \"#\" + pos);\n    }\n    return results1;\n  };\n\n  _validForms = function(wordnet, string, callback) {\n    var eachFn, filteredResults, pos, possibleForms, reducer, ref, sense, word;\n    ref = string.split('#'), word = ref[0], pos = ref[1], sense = ref[2];\n    if (!pos) {\n      reducer = function(previous, current, next) {\n        return _validForms(wordnet, string + \"#\" + current, function(err, value) {\n          if (value === void 0) {\n            return next(null, previous);\n          } else {\n            return next(null, previous.concat(value));\n          }\n        });\n      };\n      return async.reduce(['n', 'v', 'a', 'r'], [], reducer, function(err, result) {\n        return callback(null, result);\n      });\n    } else {\n      possibleForms = forms(wordnet, word + \"#\" + pos);\n      filteredResults = [];\n      eachFn = function(term, done) {\n        return wordnet.lookup(term, function(err, data) {\n          if (err != null) {\n            return done(err);\n          }\n          if (data.length > 0) {\n            filteredResults.push(term);\n          }\n          return done();\n        });\n      };\n      return async.each(possibleForms, eachFn, function(err) {\n        return callback(err, filteredResults);\n      });\n    }\n  };\n\n  _validFormsWithExceptions = function(wordnet, string, callback) {\n    if (wordnet.exceptions === void 0) {\n      return _loadExceptions(wordnet, function() {\n        return _validFormsWithExceptions(wordnet, string, callback);\n      });\n    } else if (wordnet.exceptions === 'pending') {\n      return setImmediate(_validFormsWithExceptions, wordnet, string, callback);\n    } else {\n      return _validForms(wordnet, string, callback);\n    }\n  };\n\n  WordNet.prototype.validForms = function(string, callback) {\n    var hit, query, wordnet;\n    wordnet = this;\n    if (this.cache) {\n      query = \"validForms:\" + string;\n      if (hit = wordnet.cache.get(query)) {\n        if (callback.length === 1) {\n          return callback.call(wordnet, hit);\n        } else {\n          return callback.call(wordnet, null, hit);\n        }\n      }\n    }\n    return _validFormsWithExceptions(this, string, function(err, result) {\n      if (query) {\n        wordnet.cache.set(query, result);\n      }\n      if (callback.length === 1) {\n        return callback.call(wordnet, result);\n      } else {\n        return callback.call(wordnet, null, result);\n      }\n    });\n  };\n\n  WordNet.prototype.validFormsAsync = function(string) {\n    return new Promise((function(_this) {\n      return function(resolve, reject) {\n        return _this.validForms(string, function(err, data) {\n          if (err != null) {\n            return reject(err);\n          } else {\n            return resolve(data);\n          }\n        });\n      };\n    })(this));\n  };\n\n  return WordNet;\n\n})();\n\nmodule.exports = WordNet;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}